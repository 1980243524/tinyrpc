// Code generated by protoc-gen-go. DO NOT EDIT.
// source: header.proto

/*
Package header is a generated protocol buffer package.

It is generated from these files:
	header.proto

It has these top-level messages:
	RequestHeader
	ResponseHeader
*/
package header

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Compress int32

const (
	Compress_Raw    Compress = 0
	Compress_Gzip   Compress = 1
	Compress_Snappy Compress = 2
	Compress_Zlib   Compress = 3
)

var Compress_name = map[int32]string{
	0: "Raw",
	1: "Gzip",
	2: "Snappy",
	3: "Zlib",
}
var Compress_value = map[string]int32{
	"Raw":    0,
	"Gzip":   1,
	"Snappy": 2,
	"Zlib":   3,
}

func (x Compress) String() string {
	return proto.EnumName(Compress_name, int32(x))
}
func (Compress) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RequestHeader struct {
	CompressType Compress `protobuf:"varint,1,opt,name=compress_type,json=compressType,enum=header.Compress" json:"compress_type,omitempty"`
	Method       string   `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
	Id           uint64   `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	RequestLen   uint32   `protobuf:"varint,4,opt,name=request_len,json=requestLen" json:"request_len,omitempty"`
	Checksum     uint32   `protobuf:"varint,5,opt,name=checksum" json:"checksum,omitempty"`
}

func (m *RequestHeader) Reset()                    { *m = RequestHeader{} }
func (m *RequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()               {}
func (*RequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RequestHeader) GetCompressType() Compress {
	if m != nil {
		return m.CompressType
	}
	return Compress_Raw
}

func (m *RequestHeader) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *RequestHeader) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RequestHeader) GetRequestLen() uint32 {
	if m != nil {
		return m.RequestLen
	}
	return 0
}

func (m *RequestHeader) GetChecksum() uint32 {
	if m != nil {
		return m.Checksum
	}
	return 0
}

type ResponseHeader struct {
	CompressType Compress `protobuf:"varint,1,opt,name=compress_type,json=compressType,enum=header.Compress" json:"compress_type,omitempty"`
	Id           uint64   `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Error        string   `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	ResponseLen  uint32   `protobuf:"varint,4,opt,name=response_len,json=responseLen" json:"response_len,omitempty"`
	Checksum     uint32   `protobuf:"varint,5,opt,name=checksum" json:"checksum,omitempty"`
}

func (m *ResponseHeader) Reset()                    { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string            { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()               {}
func (*ResponseHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ResponseHeader) GetCompressType() Compress {
	if m != nil {
		return m.CompressType
	}
	return Compress_Raw
}

func (m *ResponseHeader) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResponseHeader) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ResponseHeader) GetResponseLen() uint32 {
	if m != nil {
		return m.ResponseLen
	}
	return 0
}

func (m *ResponseHeader) GetChecksum() uint32 {
	if m != nil {
		return m.Checksum
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestHeader)(nil), "header.RequestHeader")
	proto.RegisterType((*ResponseHeader)(nil), "header.ResponseHeader")
	proto.RegisterEnum("header.Compress", Compress_name, Compress_value)
}

func init() { proto.RegisterFile("header.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x45, 0x71, 0x9a, 0x86, 0xf4, 0x35, 0x89, 0xac, 0x27, 0x84, 0x2c, 0x16, 0x42, 0xa7, 0x88,
	0xa1, 0x03, 0x15, 0x5f, 0xc0, 0x00, 0x03, 0x93, 0x61, 0x62, 0xa9, 0xd2, 0xe4, 0x49, 0x89, 0x68,
	0x62, 0x63, 0xa7, 0x42, 0xe1, 0x97, 0xe0, 0x23, 0x11, 0x89, 0x53, 0xb1, 0x31, 0x30, 0xde, 0x73,
	0x6d, 0xdd, 0x23, 0x3d, 0x88, 0x2a, 0xca, 0x4b, 0x32, 0x6b, 0x6d, 0x54, 0xa7, 0x30, 0x18, 0xd3,
	0xea, 0x93, 0x41, 0x2c, 0xe9, 0xed, 0x40, 0xb6, 0x7b, 0x18, 0x08, 0xde, 0x42, 0x5c, 0xa8, 0x46,
	0x1b, 0xb2, 0x76, 0xdb, 0xf5, 0x9a, 0x04, 0x4b, 0x59, 0x96, 0xdc, 0xf0, 0xb5, 0xfb, 0x7f, 0xe7,
	0x4a, 0x19, 0x4d, 0xcf, 0x9e, 0x7b, 0x4d, 0x78, 0x0e, 0x41, 0x43, 0x5d, 0xa5, 0x4a, 0xe1, 0xa5,
	0x2c, 0x5b, 0x48, 0x97, 0x30, 0x01, 0xaf, 0x2e, 0xc5, 0x2c, 0x65, 0x99, 0x2f, 0xbd, 0xba, 0xc4,
	0x4b, 0x58, 0x9a, 0x71, 0x6f, 0xbb, 0xa7, 0x56, 0xf8, 0x29, 0xcb, 0x62, 0x09, 0x0e, 0x3d, 0x52,
	0x8b, 0x17, 0x10, 0x16, 0x15, 0x15, 0xaf, 0xf6, 0xd0, 0x88, 0xf9, 0xd0, 0x1e, 0xf3, 0xea, 0x8b,
	0x41, 0x22, 0xc9, 0x6a, 0xd5, 0x5a, 0xfa, 0x9f, 0xee, 0xa8, 0xe5, 0x1d, 0xb5, 0xce, 0x60, 0x4e,
	0xc6, 0x28, 0x33, 0x98, 0x2e, 0xe4, 0x18, 0xf0, 0x0a, 0x22, 0xe3, 0xe6, 0x7e, 0xd9, 0x2e, 0x27,
	0xf6, 0x87, 0xee, 0xf5, 0x06, 0xc2, 0x69, 0x1e, 0x4f, 0x61, 0x26, 0xf3, 0x77, 0x7e, 0x82, 0x21,
	0xf8, 0xf7, 0x1f, 0xb5, 0xe6, 0x0c, 0x01, 0x82, 0xa7, 0x36, 0xd7, 0xba, 0xe7, 0xde, 0x0f, 0x7d,
	0xd9, 0xd7, 0x3b, 0x3e, 0xdb, 0x05, 0xc3, 0x81, 0x36, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x95,
	0x81, 0x36, 0x8e, 0xb0, 0x01, 0x00, 0x00,
}
